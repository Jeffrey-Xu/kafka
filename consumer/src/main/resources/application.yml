spring:
  application:
    name: spring-kafka-consumer
  
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  
  # Database configuration
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/kafka_demo?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC}
    username: ${SPRING_DATASOURCE_USERNAME:kafka_user}
    password: ${SPRING_DATASOURCE_PASSWORD:kafka_pass}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      validation-timeout: 5000
  
  # JPA configuration
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
  
  # Kafka configuration
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:52.91.177.171:9092}
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      group-id: kafka-demo-consumer-group
      auto-offset-reset: earliest
      enable-auto-commit: false
      fetch-min-size: 1
      fetch-max-wait: 500
      max-poll-records: 500
      properties:
        spring.json.trusted.packages: "com.jeffreyxu.kafka.common.model"
        spring.json.type.mapping: "userEvent:com.jeffreyxu.kafka.common.model.UserEvent,businessEvent:com.jeffreyxu.kafka.common.model.BusinessEvent,systemEvent:com.jeffreyxu.kafka.common.model.SystemEvent"
    
    listener:
      ack-mode: manual_immediate
      concurrency: 3
      poll-timeout: 3000
      type: batch
      missing-topics-fatal: false

# Server configuration
server:
  port: 8081
  servlet:
    context-path: /
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env,configprops
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.95, 0.99
      sla:
        http.server.requests: 10ms, 50ms, 100ms, 200ms, 500ms

# Logging configuration
logging:
  level:
    com.jeffreyxu.kafka: INFO
    org.springframework.kafka: WARN
    org.apache.kafka: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%logger{36}] - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%logger{36}] - %msg%n"

# Application-specific configuration
app:
  consumer:
    batch-size: 100
    processing-timeout: 30000
    retry-attempts: 3
    error-topic: error-events

---
# Development profile
spring:
  config:
    activate:
      on-profile: dev
  
  datasource:
    url: jdbc:mysql://localhost:3306/kafka_demo?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
  
  kafka:
    bootstrap-servers: localhost:9092

logging:
  level:
    com.jeffreyxu.kafka: DEBUG
    org.springframework.kafka: INFO

---
# Kubernetes profile
spring:
  config:
    activate:
      on-profile: kubernetes
  
  datasource:
    url: jdbc:mysql://mysql-service:3306/kafka_demo?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
    username: ${DB_USERNAME:kafka_user}
    password: ${DB_PASSWORD:kafka_pass}
  
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:52.91.177.171:9092}

logging:
  level:
    com.jeffreyxu.kafka: INFO

---
# Production profile
spring:
  config:
    activate:
      on-profile: prod
  
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 10
  
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    consumer:
      fetch-min-size: 10240
      fetch-max-wait: 1000
      max-poll-records: 1000

logging:
  level:
    com.jeffreyxu.kafka: WARN
