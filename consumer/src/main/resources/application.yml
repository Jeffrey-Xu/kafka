spring:
  application:
    name: kafka-consumer
  
  profiles:
    active: dev
  
  datasource:
    url: jdbc:mysql://localhost:3306/kafka_demo
    username: kafka_user
    password: kafka_password
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1200000
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
  
  # Static resource configuration for web interface
  web:
    resources:
      static-locations: classpath:/static/
      cache:
        period: 0
  mvc:
    static-path-pattern: /**
  
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      group-id: kafka-demo-consumer-group
      auto-offset-reset: latest
      enable-auto-commit: false
      fetch-min-size: 1
      fetch-max-wait: 500ms
      max-poll-records: 500
      properties:
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: "*"
        spring.json.value.default.type: com.jeffreyxu.kafka.common.model.BaseEvent
        spring.json.use.type.headers: false
    listener:
      ack-mode: manual
      concurrency: 1
      poll-timeout: 3000ms
      type: single
      missing-topics-fatal: false

server:
  port: 8080

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

logging:
  level:
    com.jeffreyxu.kafka: INFO
    org.springframework.kafka: WARN
    org.apache.kafka: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} %5p [%15.15t] %-40.40logger{39} : %m%n"

---
# Kubernetes profile
spring:
  config:
    activate:
      on-profile: kubernetes
  
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://mysql-service:3306/kafka_demo}
    username: ${SPRING_DATASOURCE_USERNAME:kafka_user}
    password: ${SPRING_DATASOURCE_PASSWORD:kafka_password}
  
  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:52.91.177.171:9092}
    consumer:
      value-deserializer: ${SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER:org.springframework.kafka.support.serializer.ErrorHandlingDeserializer}
      enable-auto-commit: ${SPRING_KAFKA_CONSUMER_ENABLE_AUTO_COMMIT:false}
      properties:
        spring.deserializer.value.delegate.class: ${SPRING_KAFKA_CONSUMER_PROPERTIES_SPRING_DESERIALIZER_VALUE_DELEGATE_CLASS:org.springframework.kafka.support.serializer.JsonDeserializer}
        spring.json.trusted.packages: ${SPRING_KAFKA_CONSUMER_PROPERTIES_SPRING_JSON_TRUSTED_PACKAGES:"*"}
        spring.json.value.default.type: ${SPRING_KAFKA_CONSUMER_PROPERTIES_SPRING_JSON_VALUE_DEFAULT_TYPE:com.jeffreyxu.kafka.common.model.BaseEvent}
        spring.json.use.type.headers: ${SPRING_KAFKA_CONSUMER_PROPERTIES_SPRING_JSON_USE_TYPE_HEADERS:false}
    listener:
      ack-mode: ${SPRING_KAFKA_LISTENER_ACK_MODE:manual}

server:
  port: 8080

---
# Production profile  
spring:
  config:
    activate:
      on-profile: prod
  
  kafka:
    consumer:
      auto-offset-reset: earliest
      max-poll-records: 100
    listener:
      concurrency: 3

logging:
  level:
    com.jeffreyxu.kafka: DEBUG
