apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-kafka-producer
  namespace: kafka-demo
  labels:
    app: spring-kafka-producer
    component: producer
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: spring-kafka-producer
  template:
    metadata:
      labels:
        app: spring-kafka-producer
        component: producer
        version: v1
    spec:
      serviceAccountName: kafka-demo-sa
      containers:
      - name: producer
        image: IMAGE_PLACEHOLDER  # Will be replaced by CI/CD pipeline with jeffreyxu2025/kafka:producer-{sha}
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "kubernetes"
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: password
        - name: KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: spring.kafka.bootstrap-servers
        - name: SPRING_DATASOURCE_URL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: spring.datasource.url
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: config-volume
        configMap:
          name: app-config
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: spring-kafka-producer-service
  namespace: kafka-demo
  labels:
    app: spring-kafka-producer
    component: producer
spec:
  selector:
    app: spring-kafka-producer
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  type: ClusterIP
